// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load, sel=address, a=load7, b=load6, c=load5, d=load4, e=load3, f=load2, g=load1, h=load0);
    Register(in=in, load=load0, out=regout0);
    Register(in=in, load=load1, out=regout1);
    Register(in=in, load=load2, out=regout2);
    Register(in=in, load=load3, out=regout3);
    Register(in=in, load=load4, out=regout4);
    Register(in=in, load=load5, out=regout5);
    Register(in=in, load=load6, out=regout6);
    Register(in=in, load=load7, out=regout7);
    Mux8Way16(a=regout7,b=regout6,c=regout5,d=regout4,e=regout3,f=regout2,g=regout1,h=regout0,sel=address,out=out); 
}